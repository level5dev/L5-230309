{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","_CatalogPage","apply","arguments","_proto","prototype","formatCategoryTreeForJSTree","node","_this","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","navigate","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","activateTab","searchData","url","count","urlUtils","replaceParams","page","goToUrl","showContent","$tabToActivate","find","each","idx","tab","$tab","is","removeAttr","attr","onTabChangeWithArrows","event","eventKey","which","$tabsCollection","index","document","activeElement","nextTabIdx","$activeTab","activeTabIdx","lastTabIdx","length","get","focus","trigger","onReady","_this2","compareProducts","context","arrangeFocusOnSortBy","$searchForm","$categoryTreeContainer","Url","parse","window","location","href","treeData","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","preventDefault","query","section","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","_step","_iterator","_createForOfIteratorHelperLoose","done","categoryId","value","input","type","name","append","$searchResultsMessage","searchResultsCount","prependTo","setTimeout","loadTreeNodes","cb","_this3","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","formattedResults","dataNode","$container","_this4","treeOptions","core","themes","icons","checkbox","three_state","plugins","_this5","_this$context","onMinPriceError","onMaxPriceError","minPriceNotEntered","maxPriceNotEntered","onInvalidPrice","$contentListingContainer","$searchHeading","$searchCount","$contentCount","requestOptions","template","productListing","contentListing","sidebar","heading","productCount","contentCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","validationErrorMessages","$form","nod","submit","tap","announceInputErrorMessage","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","updateCounterNav","counter","$link","urls","compare","join","_ref","noCompareMessage","compareCounter","$compareLink","$checked","map","element","item","product","currentTarget","$clickedCompareLink","checked","indexOf","splice","decrementCounter","showAlertModal","_PageManager","call","addEventListener","localStorage","setItem","$sortBySelector","getItem","removeItem","queryParams","serialize","split","format","pathname","search","buildQueryString","PageManager","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","callback","options","_extend","collapsedFacets","collapsedFacetItems","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","updateRequestOptions","opts","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","getUrl","err","hide","Error","expandFacetItems","$navList","_without","hasMoreResults","_union","toggleFacetItems","_includes","getMoreFacetResults","facet","facetUrl","params","list_all","response","open","updateContent","$items","val","toLowerCase","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","selectors","errorSelector","fieldsetSelector","formSelector","maxPriceSelector","minPriceSelector","Validators","setMinMaxPriceValidation","priceRangeValidator","_this6","_this7","unbindEvents","onPopState","off","stopPropagation","$toggle","toggleClass","urlQueryParams","Object","assign","constants","VALID","decodeURI","key","parseQueryParams","hasOwnProperty","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","history","replaceState","title"],"mappings":"krCAWA,IAGqBA,EAAM,SAAAC,G,QAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,K,EAAAF,G,EAAAD,G,sEAAA,IAAAI,EAAAJ,EAAAK,UAkVtB,OAlVsBD,EACvBE,4BAAA,SAA4BC,GAAM,IAAAC,EAAA,KACxBC,EAAW,CACbC,KAAMH,EAAKI,KACXC,GAAIL,EAAKM,SAASD,GAClBE,MAAO,CACHC,SAAUR,EAAKQ,WAgBvB,OAZIR,EAAKO,QACLL,EAASK,MAAME,OAAwB,SAAfT,EAAKO,MAC7BL,EAASQ,UAAW,GAGpBV,EAAKU,WACLR,EAASQ,SAAW,GACpBV,EAAKU,SAASC,SAAQ,SAACC,GACnBV,EAASQ,SAASG,KAAKZ,EAAKF,4BAA4Ba,QAIzDV,GACVL,EAEDiB,aAAA,SAAaC,GAaT,QAbiB,IAARA,OAAW,GACpBC,KAAKC,yBAAyBC,YAAY,YAC1CF,KAAKG,wBAAwBD,YAAY,YACzCF,KAAKI,yBAAyBC,SAAS,YAEvCC,EAAE,iCAAiCJ,YAAY,+BAC/CI,EAAE,iCAAiCD,SAAS,iBAE5CC,EAAE,iCAAiCJ,YAAY,iBAC/CI,EAAE,iCAAiCD,SAAS,+BAE5CL,KAAKO,YAAYD,EAAE,kCAEdP,EAAL,CAIA,IAAMS,EAAaF,EAAE,sCAAsClB,OACrDqB,EAAOD,EAAWE,MAAQ,EAAKF,EAAWC,IAAME,IAASC,cAAcJ,EAAWC,IAAK,CACzFI,KAAM,IAGVF,IAASG,QAAQL,KACpB5B,EAEDkC,YAAA,SAAYhB,GAaR,QAbgB,IAARA,OAAW,GACnBC,KAAKI,yBAAyBF,YAAY,YAC1CF,KAAKC,yBAAyBI,SAAS,YACvCL,KAAKG,wBAAwBE,SAAS,YAEtCC,EAAE,iCAAiCJ,YAAY,+BAC/CI,EAAE,iCAAiCD,SAAS,iBAE5CC,EAAE,iCAAiCJ,YAAY,iBAC/CI,EAAE,iCAAiCD,SAAS,+BAE5CL,KAAKO,YAAYD,EAAE,kCAEdP,EAAL,CAIA,IAAMS,EAAaF,EAAE,sCAAsClB,OACrDqB,EAAOD,EAAWE,MAAQ,EAAKF,EAAWC,IAAME,IAASC,cAAcJ,EAAWC,IAAK,CACzFI,KAAM,IAGVF,IAASG,QAAQL,KACpB5B,EAED0B,YAAA,SAAYS,GACgBV,EAAE,2BAA2BW,KAAK,gBAE1CC,MAAK,SAACC,EAAKC,GACvB,IAAMC,EAAOf,EAAEc,GAEf,GAAIC,EAAKC,GAAGN,GAGR,OAFAK,EAAKE,WAAW,iBAChBF,EAAKG,KAAK,iBAAiB,GAI/BH,EAAKG,KAAK,WAAY,MACtBH,EAAKG,KAAK,iBAAiB,OAElC3C,EAED4C,sBAAA,SAAsBC,GAClB,IAAMC,EAAWD,EAAME,MAGvB,GAnGa,KAiGqBD,GAhGpB,KAiGPA,EACP,CAEA,IAAME,EAAkBvB,EAAE,2BAA2BW,KAAK,gBAG1D,MADoF,IAAtDY,EAAgBC,MAAMxB,EAAEyB,SAASC,iBAC/D,CAEA,IAIIC,EAJEC,EAAa5B,EAAE,IAAIyB,SAASC,cAAc3C,IAC1C8C,EAAeN,EAAgBC,MAAMI,GACrCE,EAAaP,EAAgBQ,OAAS,EAG5C,OAAQV,GACR,KAhHa,GAiHTM,EAA8B,IAAjBE,EAAqBC,EAAaD,EAAe,EAC9D,MACJ,KAlHc,GAmHVF,EAAaE,IAAiBC,EAAa,EAAID,EAAe,EAKlE7B,EAAEuB,EAAgBS,IAAIL,IAAaM,QAAQC,QAAQ,YACtD3D,EAED4D,QAAA,WAAU,IAAAC,EAAA,KACNC,YAAgB3C,KAAK4C,SACrB5C,KAAK6C,uBAEL,IAAMC,EAAcxC,EAAE,+BAChByC,EAAyBD,EAAY7B,KAAK,+BAC1CR,EAAMuC,IAAIC,MAAMC,OAAOC,SAASC,MAAM,GACtCC,EAAW,GACjBrD,KAAKC,yBAA2BK,EAAE,8BAClCN,KAAKG,wBAA0BG,EAAE,6BACjCN,KAAKI,yBAA2BE,EAAE,2BAG9BA,EAAE,kBAAkB+B,OAAS,EAC7BrC,KAAKsD,qBAELtD,KAAKuD,eAAiBvD,KAAKuD,eAAeC,KAAKxD,MAC/CyD,IAAMC,GAAG,mBAAoB1D,KAAKuD,iBAItCI,cAEArD,EAAE,iCAAiCoD,GAAG,SAAS,SAAAhC,GAC3CA,EAAMkC,iBACNlB,EAAK5C,kBAGTQ,EAAE,iCAAiCoD,GAAG,SAAS,SAAAhC,GAC3CA,EAAMkC,iBACNlB,EAAK3B,iBAGTT,EAAE,2BAA2BoD,GAAG,QAAS1D,KAAKyB,uBAEkB,IAA5DzB,KAAKC,yBAAyBgB,KAAK,cAAcoB,QAAsC,YAAtB5B,EAAIoD,MAAMC,QAC3E9D,KAAKe,aAAY,GAEjBf,KAAKF,cAAa,GAGtB,IAAMiE,EAAY/D,KAAKgE,eAAelB,GACjCmB,eAAenB,EAAY7B,KAAK,sBAErCjB,KAAK4C,QAAQsB,aAAavE,SAAQ,SAACX,GAC/BqE,EAASxD,KAAK6C,EAAK3D,4BAA4BC,OAGnDgB,KAAKmE,iBAAmBd,EACxBrD,KAAKoE,mBAAmBrB,GAExBD,EAAYY,GAAG,UAAU,SAAAhC,GACrB,IAAM2C,EAAsBtB,EAAuBuB,SAASC,eAE5D,IAAKR,EAAUS,QACX,OAAO9C,EAAMkC,iBAGjBd,EAAY7B,KAAK,4BAA8BwD,SAE/C,IAAK,IAAuCC,EAA5CC,EAAAC,EAAyBP,KAAmBK,EAAAC,KAAAE,MAAE,KAAnCC,EAAUJ,EAAAK,MACXC,EAAQ1E,EAAE,UAAW,CACvB2E,KAAM,SACNC,KAAM,aACNH,MAAOD,IAGXhC,EAAYqC,OAAOH,OAI3B,IAAMI,EAAwB9E,EAAE,wJAKzBN,KAAK4C,QAAQyC,mBAAkB,QACjCC,UAAU,QAEfC,YAAW,kBAAMH,EAAsB7C,UAAS,MACnD1D,EAED2G,cAAA,SAAcxG,EAAMyG,GAAI,IAAAC,EAAA,KACpBpF,EAAEqF,KAAK,CACHlF,IAAK,2BACLrB,KAAM,CACFwG,mBAAoB5G,EAAKK,GACzBwG,OAAQ,YAEZC,QAAS,CACL,eAAgB5C,OAAO6C,QAAU7C,OAAO6C,OAAOC,WAAa9C,OAAO6C,OAAOC,WAAa,MAE5FnB,MAAK,SAAAzF,GACJ,IAAM6G,EAAmB,GAEzB7G,EAAKO,SAAQ,SAACuG,GACVD,EAAiBpG,KAAK6F,EAAK3G,4BAA4BmH,OAG3DT,EAAGQ,OAEVpH,EAEDuF,mBAAA,SAAmB+B,GAAY,IAAAC,EAAA,KACrBC,EAAc,CAChBC,KAAM,CACFlH,KAAM,SAACJ,EAAMyG,GAEO,MAAZzG,EAAKK,GACLoG,EAAGW,EAAKjC,kBAGRiC,EAAKZ,cAAcxG,EAAMyG,IAGjCc,OAAQ,CACJC,OAAO,IAGfC,SAAU,CACNC,aAAa,GAEjBC,QAAS,CACL,aAIRR,EAAW7B,OAAO+B,IACrBxH,EAEDyE,kBAAA,WAAoB,IAAAsD,EAAA,KAEhBC,EAAqG7G,KAAK4C,QAAlGkE,EAAeD,EAAfC,gBAAiBC,EAAeF,EAAfE,gBAAiBC,EAAkBH,EAAlBG,mBAAoBC,EAAkBJ,EAAlBI,mBAAoBC,EAAcL,EAAdK,eAC5EjH,EAA2BK,EAAE,8BAC7B6G,EAA2B7G,EAAE,2BAC7BH,EAA0BG,EAAE,6BAC5B8G,EAAiB9G,EAAE,2BACnB+G,EAAe/G,EAAE,iCACjBgH,EAAgBhH,EAAE,iCAElBiH,EAAiB,CACnBC,SAAU,CACNC,eAAgB,yBAChBC,eAAgB,yBAChBC,QAAS,iBACTC,QAAS,iBACTC,aAAc,uBACdC,aAAc,wBAElBC,OAAQ,CACJC,gBAAiB,CACbC,MAZYjI,KAAK4C,QAAQsF,wBAejCC,SAAU,oBAGdnI,KAAKoI,cAAgB,IAAIC,IAAcd,GAAgB,SAACe,GACpDlB,EAAemB,KAAKD,EAAQV,SAGF,YADd5E,IAAIC,MAAMC,OAAOC,SAASC,MAAM,GACpCS,MAAMC,SACVqD,EAAyBoB,KAAKD,EAAQZ,gBACtCJ,EAAciB,KAAKD,EAAQR,cAC3BlB,EAAK7F,aAAY,KAEjBd,EAAyBsI,KAAKD,EAAQb,gBACtCtH,EAAwBoI,KAAKD,EAAQX,SACrCN,EAAakB,KAAKD,EAAQT,cAC1BjB,EAAK9G,cAAa,IAGtBQ,EAAE,QAAQkI,eAAe,gBAEzBlI,EAAE,cAAcmI,QAAQ,CACpBC,UAAW,GACZ,OACJ,CACCC,wBAAyB,CACrB7B,kBACAC,kBACAC,qBACAC,qBACAC,qBAGXrI,EAEDmF,eAAA,SAAe4E,GAOX,OANA5I,KAAK4I,MAAQA,EACb5I,KAAK+D,UAAY8E,YAAI,CACjBC,OAAQF,EACRG,IAAKC,MAGFhJ,MACVnB,EAEDoF,eAAA,SAAegF,GASX,OARIjJ,KAAK+D,WACL/D,KAAK+D,UAAUmF,IAAI,CACfC,SAAUF,EACVG,SAAU,WACVC,aAAcJ,EAAS7J,KAAK,kBAI7BY,MACVnB,EAED2F,MAAA,WACI,QAAIxE,KAAK+D,YACL/D,KAAK+D,UAAUuF,eACRtJ,KAAK+D,UAAUwF,OAAO,WAIpC9K,EAlVsB,CAAS+K,M,mDCdpC,wBAcA,SAASC,EAAiBC,EAASC,EAAOC,GACf,IAAnBF,EAAQrH,QACHsH,EAAMrI,GAAG,YACVqI,EAAMtJ,SAAS,QAEnBsJ,EAAMnI,KAAK,OAAWoI,EAAKC,QAAO,IAAIH,EAAQI,KAAK,MACnDH,EAAM1I,KAAK,kBAAkBsH,KAAKmB,EAAQrH,SAE1CsH,EAAMzJ,YAAY,QAIX,aAAA6J,GAAsC,IAA1BC,EAAgBD,EAAhBC,iBAAkBJ,EAAIG,EAAJH,KACrCK,EAAiB,GAEfC,EAAe5J,EAAE,uBAEvBA,EAAE,QAAQoD,GAAG,gBAAgB,WACzB,IAAMyG,EAAW7J,EAAE,QAAQW,KAAK,oCAGhCwI,EADAQ,EAAiBE,EAAS9H,OAAS8H,EAASC,KAAI,SAACtI,EAAOuI,GAAO,OAAKA,EAAQtF,SAAOzC,MAAQ,GAC1D4H,EAAcN,MAGnDtJ,EAAE,QAAQkI,eAAe,gBAEzBlI,EAAE,QAAQoD,GAAG,QAAS,qBAAqB,SAAAhC,GACvC,IA/B2B4I,EA+BrBC,EAAU7I,EAAM8I,cAAczF,MAC9B0F,EAAsBnK,EAAE,uBAE1BoB,EAAM8I,cAAcE,SAlCGJ,EAmCUC,EAAhBN,EAlCjBpK,KAAKyK,IATjB,SAA0BZ,EAASY,GAC/B,IAAMxI,EAAQ4H,EAAQiB,QAAQL,GAE1BxI,GAAS,GACT4H,EAAQkB,OAAO9I,EAAO,GAyClB+I,CAAiBZ,EAAgBM,GAGrCd,EAAiBQ,EAAgBQ,EAAqBb,MAG1DtJ,EAAE,QAAQoD,GAAG,SAAU,0BAA0B,SAAAhC,GAC/BpB,EAAEoB,EAAM8I,eACUvJ,KAAK,oCAEfoB,QAAU,IAC5ByI,YAAed,GACftI,EAAMkC,qBAIdtD,EAAE,QAAQoD,GAAG,QAAS,uBAAuB,WAGzC,GAF6BpD,EAAE,QAAQW,KAAK,oCAEnBoB,QAAU,EAE/B,OADAyI,YAAed,IACR,Q,gQClEG,IAEDR,EAAW,SAAAuB,G,QAC5B,SAAAvB,EAAY5G,GAAS,IAAA3D,EAOd,OANHA,EAAA8L,EAAAC,KAAA,KAAMpI,IAAQ,KAEdM,OAAO+H,iBAAiB,gBAAgB,WACF,SAA9BlJ,SAASC,cAAc3C,IACvB6D,OAAOgI,aAAaC,QAAQ,eAAgB,eAEjDlM,E,EARqB8L,G,EAAAvB,G,sEAS3B,IAAA3K,EAAA2K,EAAA1K,UAqBA,OArBAD,EAEDgE,qBAAA,WACI,IAAMuI,EAAkB9K,EAAE,kCACtB4C,OAAOgI,aAAaG,QAAQ,kBAC5BD,EAAgB7I,QAChBW,OAAOgI,aAAaI,WAAW,kBAEtCzM,EAED0E,eAAA,SAAe7B,EAAO8I,GAClB,IAAM/J,EAAMuC,IAAIC,MAAMC,OAAOC,SAASC,MAAM,GACtCmI,EAAcjL,EAAEkK,GAAegB,YAAYC,MAAM,KAEvDhL,EAAIoD,MAAM0H,EAAY,IAAMA,EAAY,UACjC9K,EAAIoD,MAAMhD,KACjBa,EAAMkC,iBACgB,QAAnB2H,EAAY,WACJ9K,EAAIoD,MAAM0H,EAAY,IAEjCrI,OAAOC,SAAWH,IAAI0I,OAAO,CAAEC,SAAUlL,EAAIkL,SAAUC,OAAQjL,IAASkL,iBAAiBpL,EAAIoD,UAChG2F,EA9B2B,CAASsC,O,4MCMnCC,EAAiB,CACnBC,wBAAyB,6EACzBC,gBAAiB,0BACjBC,mBAAoB,0CACpBC,kBAAmB,yBACnBC,qBAAsB,0BACtBC,wBAAyB,wCACzBC,2BAA4B,mCAC5BC,uBAAwB,oBACxBC,2BAA4B,qCAC5BC,2BAA4B,qCAC5BC,uBAAwB,gDACxBC,yBAA0B,yCAC1BC,MAAOC,YAAa,UAAU,GAC9BC,WAAW,GAMTzE,EAAa,WAqBf,SAAAA,EAAYd,EAAgBwF,EAAUC,GAAS,IAAA/N,EAAA,KAE3Ce,KAAKuH,eAAiBA,EACtBvH,KAAK+M,SAAWA,EAChB/M,KAAKgN,QAAUC,IAAS,GAAIlB,EAAgBiB,GAC5ChN,KAAKkN,gBAAkB,GACvBlN,KAAKmN,oBAAsB,GAG3BxJ,cAGA3D,KAAKoN,qBAGL9M,EAAEN,KAAKgN,QAAQZ,sBAAsBlL,MAAK,SAACY,EAAOuL,GAC9CpO,EAAKqO,mBAAmBhN,EAAE+M,OAI9B/M,EAAEN,KAAKgN,QAAQhB,yBAAyB9K,MAAK,SAACY,EAAOyL,GACjD,IACMC,EADmBlN,EAAEiN,GACUnO,KAAK,uBAEtCoO,EAAYC,aACZxO,EAAKiO,gBAAgBrN,KAAK2N,EAAYE,aAM9CnI,YAAW,WACHjF,EAAErB,EAAK+N,QAAQb,mBAAmB7K,GAAG,YACrCrC,EAAK0O,uBAKb3N,KAAK4N,cAAgB5N,KAAK4N,cAAcpK,KAAKxD,MAC7CA,KAAK6N,cAAgB7N,KAAK6N,cAAcrK,KAAKxD,MAC7CA,KAAK8N,kBAAoB9N,KAAK8N,kBAAkBtK,KAAKxD,MACrDA,KAAK+N,aAAe/N,KAAK+N,aAAavK,KAAKxD,MAC3CA,KAAKgO,aAAehO,KAAKgO,aAAaxK,KAAKxD,MAC3CA,KAAKiO,cAAgBjO,KAAKiO,cAAczK,KAAKxD,MAC7CA,KAAKuD,eAAiBvD,KAAKuD,eAAeC,KAAKxD,MAC/CA,KAAKkO,iBAAmBlO,KAAKkO,iBAAiB1K,KAAKxD,MAEnDA,KAAKmO,aAGT,IAAAtP,EAAAwJ,EAAAvJ,UAoVC,OApVDD,EACAuP,qBAAA,SAAqBC,GACjBrO,KAAKuH,eAAiB8G,GAG1BxP,EACAyP,YAAA,SAAYhG,GACJA,GACAtI,KAAK+M,SAASzE,GAIlB3E,cAGA3D,KAAKoN,qBAGLpN,KAAKuO,yBACLvO,KAAKwO,6BAGLxO,KAAKmO,aAGL7N,EAAE,QAAQkI,eAAe,yBAC5B3J,EAED4P,WAAA,WAAa,IAAA/L,EAAA,KACTpC,EAAEN,KAAKgN,QAAQf,iBAAiByC,OAEhCC,IAAIC,QAAQjO,IAASkO,SAAU7O,KAAKuH,gBAAgB,SAACuH,EAAKxG,GAGtD,GAFAhI,EAAEoC,EAAKsK,QAAQf,iBAAiB8C,OAE5BD,EACA,MAAM,IAAIE,MAAMF,GAIpBpM,EAAK4L,YAAYhG,OAExBzJ,EAEDoQ,iBAAA,SAAiBC,GACb,IAAM7P,EAAK6P,EAAS1N,KAAK,MAGzBxB,KAAKmN,oBAAsBgC,IAAUnP,KAAKmN,oBAAqB9N,IAClER,EAEDyO,mBAAA,SAAmB4B,GACf,IAAM7P,EAAK6P,EAAS1N,KAAK,MACnB4N,EAAiBF,EAAS9P,KAAK,kBAGjCY,KAAKmN,oBADLiC,EAC2BC,IAAQrP,KAAKmN,oBAAqB,CAAC9N,IAEnC8P,IAAUnP,KAAKmN,oBAAqB9N,IAEtER,EAEDyQ,iBAAA,SAAiBJ,GACb,IAAM7P,EAAK6P,EAAS1N,KAAK,MAGzB,OAAI+N,IAAWvP,KAAKmN,oBAAqB9N,IACrCW,KAAKwP,oBAAoBN,IAElB,IAGXlP,KAAKsN,mBAAmB4B,IAEjB,IACVrQ,EAED2Q,oBAAA,SAAoBN,GAAU,IAAAxJ,EAAA,KACpB+J,EAAQP,EAAS9P,KAAK,SACtBsQ,EAAW/O,IAASkO,SAqB1B,OAnBI7O,KAAKuH,eAAeY,UACpBwG,IAAIC,QAAQc,EAAU,CAClBlI,SAAUxH,KAAKuH,eAAeY,SAC9BwH,OAAQ,CACJC,SAAUH,KAEf,SAACX,EAAKe,GACL,GAAIf,EACA,MAAM,IAAIE,MAAMF,GAGpBpJ,EAAKsH,QAAQJ,MAAMkD,OACnBpK,EAAKsH,QAAQF,WAAY,EACzBpH,EAAKsH,QAAQJ,MAAMmD,cAAcF,MAIzC7P,KAAKsN,mBAAmB4B,IAEjB,GACVrQ,EAEDqP,iBAAA,SAAiBxM,GACb,IAAMsO,EAAS1P,EAAE,iBACXuD,EAAQvD,EAAEoB,EAAM8I,eAAeyF,MAAMC,cAE3CF,EAAO9O,MAAK,SAACY,EAAOuI,IAEa,IADhB/J,EAAE+J,GAASlL,OAAO+Q,cACtBvF,QAAQ9G,GACbvD,EAAE+J,GAASqE,OAEXpO,EAAE+J,GAAS0E,WAGtBlQ,EAEDsR,YAAA,SAAYC,GACYA,EAAiBhR,KAAK,uBAE9B0Q,QACfjR,EAEDwR,cAAA,SAAcD,GACUA,EAAiBhR,KAAK,uBAE9BkR,SACfzR,EAED8O,kBAAA,WAAoB,IAAAvH,EAAA,KACU9F,EAAEN,KAAKgN,QAAQhB,yBAEvB9K,MAAK,SAACY,EAAOyL,GAC3B,IAAM6C,EAAmB9P,EAAEiN,GAE3BnH,EAAKiK,cAAcD,OAE1BvR,EAED0R,gBAAA,WAAkB,IAAA3J,EAAA,KACYtG,EAAEN,KAAKgN,QAAQhB,yBAEvB9K,MAAK,SAACY,EAAOyL,GAC3B,IAAM6C,EAAmB9P,EAAEiN,GAE3B3G,EAAKuJ,YAAYC,OAIzBvR,EACAuO,mBAAA,WACI,GAAsD,IAAlD9M,EAAEN,KAAKgN,QAAQT,wBAAwBlK,OAA3C,CAIA,IAAM0B,EAAY8E,cACZ2H,EAAY,CACdC,cAAezQ,KAAKgN,QAAQX,wBAC5BqE,iBAAkB1Q,KAAKgN,QAAQV,2BAC/BqE,aAAc3Q,KAAKgN,QAAQT,uBAC3BqE,iBAAkB5Q,KAAKgN,QAAQR,2BAC/BqE,iBAAkB7Q,KAAKgN,QAAQP,4BAGnCqE,IAAWC,yBAAyBhN,EAAWyM,EAAWxQ,KAAKgN,QAAQrE,yBAEvE3I,KAAKgR,oBAAsBjN,IAC9BlF,EAED2P,2BAAA,WAA6B,IAAAyC,EAAA,KACP3Q,EAAEN,KAAKgN,QAAQZ,sBAGvBlL,MAAK,SAACY,EAAOuL,GACnB,IAAM6B,EAAW5O,EAAE+M,GACbhO,EAAK6P,EAAS1N,KAAK,MACF+N,IAAW0B,EAAK9D,oBAAqB9N,GAGxD4R,EAAK3D,mBAAmB4B,GAExB+B,EAAKhC,iBAAiBC,OAGjCrQ,EAED0P,uBAAA,WAAyB,IAAA2C,EAAA,KACK5Q,EAAEN,KAAKgN,QAAQhB,yBAEvB9K,MAAK,SAACY,EAAOyL,GAC3B,IAAM6C,EAAmB9P,EAAEiN,GAErBlO,EADc+Q,EAAiBhR,KAAK,uBACnBsO,SACA6B,IAAW2B,EAAKhE,gBAAiB7N,GAGpD6R,EAAKb,cAAcD,GAEnBc,EAAKf,YAAYC,OAG5BvR,EAEDsP,WAAA,WAEInO,KAAKmR,eAGL7Q,EAAE4C,QAAQQ,GAAG,cAAe1D,KAAK4N,eACjCtN,EAAE4C,QAAQQ,GAAG,WAAY1D,KAAKoR,YAC9B9Q,EAAEyB,UAAU2B,GAAG,QAAS1D,KAAKgN,QAAQN,uBAAwB1M,KAAK6N,eAClEvN,EAAEyB,UAAU2B,GAAG,qBAAsB1D,KAAKgN,QAAQhB,wBAAyBhM,KAAK8N,mBAChFxN,EAAEyB,UAAU2B,GAAG,QAAS1D,KAAKgN,QAAQL,yBAA0B3M,KAAKkO,kBACpE5N,EAAEN,KAAKgN,QAAQd,oBAAoBxI,GAAG,QAAS1D,KAAK+N,cAGpDtK,IAAMC,GAAG,8BAA+B1D,KAAKgO,cAC7CvK,IAAMC,GAAG,gCAAiC1D,KAAKiO,eAC/CxK,IAAMC,GAAG,mBAAoB1D,KAAKuD,iBACrC1E,EAEDsS,aAAA,WAEI7Q,EAAE4C,QAAQmO,IAAI,cAAerR,KAAK4N,eAClCtN,EAAE4C,QAAQmO,IAAI,WAAYrR,KAAKoR,YAC/B9Q,EAAEyB,UAAUsP,IAAI,QAASrR,KAAKgN,QAAQN,uBAAwB1M,KAAK6N,eACnEvN,EAAEyB,UAAUsP,IAAI,qBAAsBrR,KAAKgN,QAAQhB,wBAAyBhM,KAAK8N,mBACjFxN,EAAEyB,UAAUsP,IAAI,QAASrR,KAAKgN,QAAQL,yBAA0B3M,KAAKkO,kBACrE5N,EAAEN,KAAKgN,QAAQd,oBAAoBmF,IAAI,QAASrR,KAAK+N,cAGrDtK,IAAM4N,IAAI,8BAA+BrR,KAAKgO,cAC9CvK,IAAM4N,IAAI,gCAAiCrR,KAAKiO,eAChDxK,IAAM4N,IAAI,mBAAoBrR,KAAKuD,iBACtC1E,EAEDkP,aAAA,SAAarM,GACT,IACMjB,EADQH,EAAEoB,EAAM8I,eACJhJ,KAAK,QAEvBE,EAAMkC,iBACNlC,EAAM4P,kBAGN3Q,IAASG,QAAQL,IACpB5B,EAEDgP,cAAA,SAAcnM,GACV,IAAM6P,EAAUjR,EAAEoB,EAAM8I,eAClB0E,EAAW5O,EAAEiR,EAAQ/P,KAAK,SAGhCE,EAAMkC,iBAGN5D,KAAKsP,iBAAiBJ,IACzBrQ,EAEDmP,aAAA,SAAatM,EAAO8I,GAChB,IAAMb,EAAQrJ,EAAEkK,GACV/J,EAAMkJ,EAAMnI,KAAK,QAEvBE,EAAMkC,iBAEN+F,EAAM6H,YAAY,eAGlB7Q,IAASG,QAAQL,GAEbT,KAAKgN,QAAQF,WACb9M,KAAKgN,QAAQJ,MAAM0D,SAE1BzR,EAED0E,eAAA,SAAe7B,EAAO8I,GAClB,IAAM/J,EAAMuC,IAAIC,MAAMC,OAAOC,SAASC,MAAM,GACtCmI,EAAcjL,EAAEkK,GAAegB,YAAYC,MAAM,KAEvDhL,EAAIoD,MAAM0H,EAAY,IAAMA,EAAY,UACjC9K,EAAIoD,MAAMhD,KAGjB,IAAM4Q,EAAiB,GACvBC,OAAOC,OAAOF,EAAgBhR,EAAIoD,OAElCnC,EAAMkC,iBAENjD,IAASG,QAAQkC,IAAI0I,OAAO,CAAEC,SAAUlL,EAAIkL,SAAUC,OAAQjL,IAASkL,iBAAiB4F,OAC3F5S,EAEDoP,cAAA,SAAcvM,EAAO8I,GAGjB,GAFA9I,EAAMkC,iBAED5D,KAAKgR,oBAAoBzH,OAAOV,IAAI+I,UAAUC,OAAnD,CAIA,IAAMpR,EAAMuC,IAAIC,MAAMC,OAAOC,SAASC,MAAM,GACxCmI,EAAcuG,UAAUxR,EAAEkK,GAAegB,aAAaC,MAAM,KAGhE,IAAK,IAAMsG,KAFXxG,EAAc5K,IAASqR,iBAAiBzG,GAGhCA,EAAY0G,eAAeF,KAC3BtR,EAAIoD,MAAMkO,GAAOxG,EAAYwG,IAKrC,IAAMN,EAAiB,GACvBC,OAAOC,OAAOF,EAAgBhR,EAAIoD,OAElClD,IAASG,QAAQkC,IAAI0I,OAAO,CAAEC,SAAUlL,EAAIkL,SAAUC,OAAQjL,IAASkL,iBAAiB4F,QAC3F5S,EAED+O,cAAA,WACI5N,KAAKyO,cACR5P,EAEDiP,kBAAA,SAAkBpM,GACd,IACM8L,EADmBlN,EAAEoB,EAAM8I,eACIpL,KAAK,uBACpCC,EAAKmO,EAAYE,SAEnBF,EAAYC,YACZzN,KAAKkN,gBAAkBmC,IAAQrP,KAAKkN,gBAAiB,CAAC7N,IAEtDW,KAAKkN,gBAAkBiC,IAAUnP,KAAKkN,gBAAiB7N,IAE9DR,EAEDuS,WAAA,WACI,IAAMc,EAAahP,OAAOC,SAASC,KAGnC,IAFqB,IAAI+O,gBAAgBD,GAEvBE,IAAI,QAAS,CAC3B,IAEMC,EAFU/R,EAAE,oBAAoBkB,KAAK,QAEZ8Q,QADpB,eACgC,UAC3CpP,OAAOqP,QAAQC,aAAa,GAAIzQ,SAAS0Q,MAAOJ,GAEpD/R,EAAE4C,QAAQV,QAAQ,gBACrB6F,EA3Zc,GA8ZJA,Q","file":"theme-bundle.chunk.12.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport FacetedSearch from './common/faceted-search';\nimport { announceInputErrorMessage } from './common/utils/form-utils';\nimport compareProducts from './global/compare-products';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\n\nconst leftArrowKey = 37;\nconst rightArrowKey = 39;\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts(navigate = true) {\n        this.$productListingContainer.removeClass('u-hidden');\n        this.$facetedSearchContainer.removeClass('u-hidden');\n        this.$contentResultsContainer.addClass('u-hidden');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-product-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-product-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    showContent(navigate = true) {\n        this.$contentResultsContainer.removeClass('u-hidden');\n        this.$productListingContainer.addClass('u-hidden');\n        this.$facetedSearchContainer.addClass('u-hidden');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-content-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-content-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    activateTab($tabToActivate) {\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        $tabsCollection.each((idx, tab) => {\n            const $tab = $(tab);\n\n            if ($tab.is($tabToActivate)) {\n                $tab.removeAttr('tabindex');\n                $tab.attr('aria-selected', true);\n                return;\n            }\n\n            $tab.attr('tabindex', '-1');\n            $tab.attr('aria-selected', false);\n        });\n    }\n\n    onTabChangeWithArrows(event) {\n        const eventKey = event.which;\n        const isLeftOrRightArrowKeydown = eventKey === leftArrowKey\n            || eventKey === rightArrowKey;\n        if (!isLeftOrRightArrowKeydown) return;\n\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        const isActiveElementNotTab = $tabsCollection.index($(document.activeElement)) === -1;\n        if (isActiveElementNotTab) return;\n\n        const $activeTab = $(`#${document.activeElement.id}`);\n        const activeTabIdx = $tabsCollection.index($activeTab);\n        const lastTabIdx = $tabsCollection.length - 1;\n\n        let nextTabIdx;\n        switch (eventKey) {\n        case leftArrowKey:\n            nextTabIdx = activeTabIdx === 0 ? lastTabIdx : activeTabIdx - 1;\n            break;\n        case rightArrowKey:\n            nextTabIdx = activeTabIdx === lastTabIdx ? 0 : activeTabIdx + 1;\n            break;\n        default: break;\n        }\n\n        $($tabsCollection.get(nextTabIdx)).focus().trigger('click');\n    }\n\n    onReady() {\n        compareProducts(this.context);\n        this.arrangeFocusOnSortBy();\n\n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$contentResultsContainer = $('#search-results-content');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        $('[data-search-page-tabs]').on('keyup', this.onTabChangeWithArrows);\n\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\n            this.showContent(false);\n        } else {\n            this.showProducts(false);\n        }\n\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n\n        const $searchResultsMessage = $(`<p\n            class=\"aria-description--hidden\"\n            tabindex=\"-1\"\n            role=\"status\"\n            aria-live=\"polite\"\n            >${this.context.searchResultsCount}</p>`)\n            .prependTo('body');\n\n        setTimeout(() => $searchResultsMessage.focus(), 100);\n    }\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        // eslint-disable-next-line object-curly-newline\n        const { onMinPriceError, onMaxPriceError, minPriceNotEntered, maxPriceNotEntered, onInvalidPrice } = this.context;\n        const $productListingContainer = $('#product-listing-container');\n        const $contentListingContainer = $('#search-results-content');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const $contentCount = $('#search-results-content-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'search/product-listing',\n                contentListing: 'search/content-listing',\n                sidebar: 'search/sidebar',\n                heading: 'search/heading',\n                productCount: 'search/product-count',\n                contentCount: 'search/content-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $searchHeading.html(content.heading);\n\n            const url = Url.parse(window.location.href, true);\n            if (url.query.section === 'content') {\n                $contentListingContainer.html(content.contentListing);\n                $contentCount.html(content.contentCount);\n                this.showContent(false);\n            } else {\n                $productListingContainer.html(content.productListing);\n                $facetedSearchContainer.html(content.sidebar);\n                $searchCount.html(content.productCount);\n                this.showProducts(false);\n            }\n\n            $('body').triggerHandler('compareReset');\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        }, {\n            validationErrorMessages: {\n                onMinPriceError,\n                onMaxPriceError,\n                minPriceNotEntered,\n                maxPriceNotEntered,\n                onInvalidPrice,\n            },\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n            tap: announceInputErrorMessage,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n}\n","import { showAlertModal } from './modal';\n\nfunction decrementCounter(counter, item) {\n    const index = counter.indexOf(item);\n\n    if (index > -1) {\n        counter.splice(index, 1);\n    }\n}\n\nfunction incrementCounter(counter, item) {\n    counter.push(item);\n}\n\nfunction updateCounterNav(counter, $link, urls) {\n    if (counter.length !== 0) {\n        if (!$link.is('visible')) {\n            $link.addClass('show');\n        }\n        $link.attr('href', `${urls.compare}/${counter.join('/')}`);\n        $link.find('span.countPill').html(counter.length);\n    } else {\n        $link.removeClass('show');\n    }\n}\n\nexport default function ({ noCompareMessage, urls }) {\n    let compareCounter = [];\n\n    const $compareLink = $('a[data-compare-nav]');\n\n    $('body').on('compareReset', () => {\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        compareCounter = $checked.length ? $checked.map((index, element) => element.value).get() : [];\n        updateCounterNav(compareCounter, $compareLink, urls);\n    });\n\n    $('body').triggerHandler('compareReset');\n\n    $('body').on('click', '[data-compare-id]', event => {\n        const product = event.currentTarget.value;\n        const $clickedCompareLink = $('a[data-compare-nav]');\n\n        if (event.currentTarget.checked) {\n            incrementCounter(compareCounter, product);\n        } else {\n            decrementCounter(compareCounter, product);\n        }\n\n        updateCounterNav(compareCounter, $clickedCompareLink, urls);\n    });\n\n    $('body').on('submit', '[data-product-compare]', event => {\n        const $this = $(event.currentTarget);\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\n\n        if (productsToCompare.length <= 1) {\n            showAlertModal(noCompareMessage);\n            event.preventDefault();\n        }\n    });\n\n    $('body').on('click', 'a[data-compare-nav]', () => {\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        if ($clickedCheckedInput.length <= 1) {\n            showAlertModal(noCompareMessage);\n            return false;\n        }\n    });\n}\n","import PageManager from './page-manager';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    constructor(context) {\n        super(context);\n\n        window.addEventListener('beforeunload', () => {\n            if (document.activeElement.id === 'sort') {\n                window.localStorage.setItem('sortByStatus', 'selected');\n            }\n        });\n    }\n\n    arrangeFocusOnSortBy() {\n        const $sortBySelector = $('[data-sort-by=\"product\"] #sort');\n        if (window.localStorage.getItem('sortByStatus')) {\n            $sortBySelector.focus();\n            window.localStorage.removeItem('sortByStatus');\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n        \n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n        event.preventDefault();\n        if(queryParams[1] === 'all') {\n            delete url.query[queryParams[0]] \n        }\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './utils/url-utils';\nimport modalFactory, { ModalEvents } from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './utils/form-utils';\nimport nod from './nod';\n\n\nconst defaultOptions = {\n    accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n    blockerSelector: '#facetedSearch .blocker',\n    clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n    componentSelector: '#facetedSearch-navList',\n    facetNavListSelector: '#facetedSearch .navList',\n    priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n    priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n    priceRangeFormSelector: '#facet-range-form',\n    priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n    priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n    showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n    facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n    modal: modalFactory('#modal')[0],\n    modalOpen: false,\n};\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // ITS custom to update options when list view changes\n    updateRequestOptions(opts) {\n        this.requestOptions = opts;\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n\n        // ITS custom trigger\n        $('body').triggerHandler('facetedSearchRefresh');\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (_.includes(this.collapsedFacetItems, id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors, this.options.validationErrorMessages);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(window).on('popstate', this.onPopState);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(window).off('popstate', this.onPopState);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event, currentTarget) {\n        const $link = $(currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onRangeSubmit(event, currentTarget) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href, true);\n        let queryParams = decodeURI($(currentTarget).serialize()).split('&');\n        queryParams = urlUtils.parseQueryParams(queryParams);\n\n        for (const key in queryParams) {\n            if (queryParams.hasOwnProperty(key)) {\n                url.query[key] = queryParams[key];\n            }\n        }\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n\n    onPopState() {\n        const currentUrl = window.location.href;\n        const searchParams = new URLSearchParams(currentUrl);\n        // If searchParams does not contain a page value then modify url query string to have page=1\n        if (!searchParams.has('page')) {\n            const linkUrl = $('.pagination-link').attr('href');\n            const re = /page=[0-9]+/i;\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\n            window.history.replaceState({}, document.title, updatedLinkUrl);\n        }\n        $(window).trigger('statechange');\n    }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}